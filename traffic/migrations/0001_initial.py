# Generated by Django 5.0.6 on 2024-06-06 07:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActualFrequency',
            fields=[
                ('driving_date', models.DateField(primary_key=True, serialize=False)),
                ('departure_time', models.TimeField(db_column='Departure_time')),
                ('driving_week', models.CharField(max_length=3)),
                ('jurisdiction_unit', models.CharField(max_length=30)),
                ('route_number', models.CharField(max_length=5)),
                ('outbound_return', models.CharField(max_length=1)),
                ('driver_id', models.CharField(blank=True, db_column='Driver_ID', max_length=10, null=True)),
            ],
            options={
                'db_table': 'Actual_frequency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppointmentForm',
            fields=[
                ('appointment_form_id', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('special_needs', models.IntegerField(blank=True, null=True)),
                ('pick_up_location_x', models.FloatField(blank=True, db_column='pick_up_location_X', null=True)),
                ('pick_up_location_y', models.FloatField(blank=True, db_column='pick_up_location_Y', null=True)),
                ('drop_off_location_x', models.FloatField(blank=True, db_column='drop_off_location_X', null=True)),
                ('drop_off_location_y', models.FloatField(blank=True, db_column='drop_off_location_Y', null=True)),
                ('passenger_id', models.CharField(blank=True, max_length=7, null=True)),
                ('driving_date', models.DateField(blank=True, null=True)),
                ('departure_time', models.TimeField(blank=True, null=True)),
                ('driving_week', models.CharField(blank=True, max_length=3, null=True)),
                ('jurisdiction_unit', models.CharField(blank=True, max_length=30, null=True)),
                ('route_number', models.CharField(blank=True, max_length=5, null=True)),
                ('outbound_return', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'appointment_form',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('license', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('brand', models.CharField(blank=True, max_length=24, null=True)),
                ('car_length', models.FloatField(blank=True, db_column='Car_length', null=True)),
                ('low_floor', models.IntegerField(blank=True, null=True)),
                ('wheelchair_use', models.IntegerField(blank=True, null=True)),
                ('number_of_seats', models.IntegerField(blank=True, db_column='Number_of_seats', null=True)),
                ('type_a_or_type_b', models.IntegerField(blank=True, db_column='Type_A_or_Type_B', null=True)),
                ('manual_gearbox', models.IntegerField(blank=True, db_column='Manual_gearbox', null=True)),
                ('displacement', models.IntegerField(blank=True, null=True)),
                ('maximum_horsepower', models.FloatField(blank=True, db_column='Maximum_horsepower', null=True)),
                ('maximum_torque', models.FloatField(blank=True, db_column='Maximum_torque', null=True)),
            ],
            options={
                'db_table': 'bus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dirver',
            fields=[
                ('driver_id', models.CharField(db_column='Driver_id', max_length=7, primary_key=True, serialize=False)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=6, null=True)),
                ('violation_record', models.IntegerField(blank=True, null=True)),
                ('driver_license', models.CharField(blank=True, max_length=5, null=True)),
                ('dirver_license_ed', models.DateField(blank=True, db_column='dirver_license_ED', null=True)),
            ],
            options={
                'db_table': 'dirver',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dock',
            fields=[
                ('location_x', models.FloatField(db_column='location_X', primary_key=True, serialize=False)),
                ('location_y', models.FloatField(db_column='location_Y')),
                ('jurisdiction_unit', models.CharField(max_length=30)),
                ('route_number', models.CharField(max_length=5)),
                ('outbound_return', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'dock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalArrivals',
            fields=[
                ('driving_date', models.DateField(primary_key=True, serialize=False)),
                ('departure_time', models.TimeField()),
                ('driving_week', models.CharField(max_length=3)),
                ('jurisdiction_unit', models.CharField(max_length=30)),
                ('route_number', models.CharField(max_length=5)),
                ('outbound_return', models.CharField(max_length=1)),
                ('location_x', models.FloatField(db_column='location_X')),
                ('location_y', models.FloatField(db_column='location_Y')),
                ('arrival_time', models.TimeField()),
            ],
            options={
                'db_table': 'historical_arrivals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('passenger_id', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('passenger_name', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('mail', models.CharField(blank=True, max_length=20, null=True)),
                ('disability_category', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passenger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('jurisdiction_unit', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('route_number', models.CharField(max_length=5)),
                ('outbound_return', models.CharField(max_length=1)),
                ('starting_point_x', models.FloatField(blank=True, db_column='starting_point_X', null=True)),
                ('starting_point_y', models.FloatField(blank=True, null=True)),
                ('destination_x', models.FloatField(blank=True, null=True)),
                ('destination_y', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'route',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schedules',
            fields=[
                ('departure_time', models.TimeField(primary_key=True, serialize=False)),
                ('driving_week', models.CharField(max_length=3)),
                ('jurisdiction_unit', models.CharField(max_length=30)),
                ('route_number', models.CharField(max_length=5)),
                ('outbound_return', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'schedules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('location_x', models.FloatField(db_column='location_X', primary_key=True, serialize=False)),
                ('location_y', models.FloatField(db_column='location_Y')),
                ('station_name', models.CharField(blank=True, max_length=50, null=True)),
                ('road_name', models.CharField(blank=True, max_length=50, null=True)),
                ('accessibility', models.IntegerField(blank=True, null=True)),
                ('waiting_area_seat', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'station',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleMaintenanceRecords',
            fields=[
                ('maintenance_date', models.DateField(primary_key=True, serialize=False)),
                ('shop', models.CharField(blank=True, max_length=40, null=True)),
                ('maintenanceg_level', models.IntegerField(blank=True, null=True)),
                ('personnel', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'vehicle_maintenance_records',
                'managed': False,
            },
        ),
    ]
